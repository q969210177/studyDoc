import{_ as n,o as a,c as o,Q as l,k as s}from"./chunks/framework.aaaf08a1.js";const u=JSON.parse('{"title":"BKTable","description":"","frontmatter":{"title":"BKTable","lang":"zh"},"headers":[],"relativePath":"components/BKTable.md","filePath":"components/BKTable.md","lastUpdated":null}'),p={name:"components/BKTable.md"},t=l("",3),e=s("table",null,[s("thead",null,[s("tr",null,[s("th",null,"属性名"),s("th",null,"类型"),s("th",null,"默认值"),s("th",null,"说明")])]),s("tbody",null,[s("tr",null,[s("td",null,"columns"),s("td",null,"Array as PropType(IBKTableProps['columns'])"),s("td",null,"[]"),s("td",null,"表头以及数据字段,各类插槽的定义")]),s("tr",null,[s("td",null,"pagerConfig"),s("td",null,"Object as PropType(PagerConfig)"),s("td",null,"{}"),s("td",null,"分页设置（一般不用设置）")]),s("tr",null,[s("td",null,"api"),s("td",null,"Function as PropType((...arg: any[]) => Promise(any))"),s("td",null,"undefined"),s("td",null,"请求的方法 返回值为{total: 0,")]),s("tr",null,[s("td",null,"apiParams"),s("td",null,"Object as PropType(Record<string, any>)"),s("td",null,"null"),s("td",null,"api的固定参数")]),s("tr",null,[s("td",null,"keyField"),s("td",null,"String as PropType(string)"),s("td",null,"''"),s("td")]),s("tr",null,[s("td",null,"showCheckbox"),s("td",null,"Boolean as PropType(boolean)"),s("td",null,"false"),s("td",null,"是否展示多选")]),s("tr",null,[s("td",null,"showRadio"),s("td",null,"Boolean as PropType(boolean)"),s("td",null,"false"),s("td",null,"是否展示单选")]),s("tr",null,[s("td",null,"showIndex"),s("td",null,"Boolean as PropType(boolean)"),s("td",null,"true"),s("td",null,"是否展示序号")]),s("tr",null,[s("td",null,"autoHeight"),s("td",null,"Boolean as PropType(boolean)"),s("td",null,"true"),s("td",null,"自动计算高度")]),s("tr",null,[s("td",null,"showPager"),s("td",null,"Boolean as PropType(boolean)"),s("td",null,"true"),s("td",null,"是否展示分页(无分页场景也不会有分页参数)")]),s("tr",null,[s("td",null,"immediate"),s("td",null,"Boolean as PropType(boolean)"),s("td",null,"true"),s("td",null,"初始是否调用api")]),s("tr",null,[s("td",null,"rowConfig"),s("td",null,"Object as PropType(VxeTablePropTypes.RowConfig)"),s("td",null,"{}"),s("td",null,"table的行设置")]),s("tr",null,[s("td",null,"editConfig"),s("td",null,"Object as PropType(VxeTablePropTypes.EditConfig)"),s("td",null,"{}"),s("td",null,"编辑行的设置(例如单击变成编辑表格还是双击变成编辑表格等等 参考vxetable)")]),s("tr",null,[s("td",null,"checkboxConfig"),s("td",null,"Object as PropType(VxeTablePropTypes.CheckboxConfig)"),s("td",null,"{}"),s("td",null,"多选单元设置(参考vxetable)")]),s("tr",null,[s("td",null,"toolbarConfig"),s("td",null,"Object as PropType(VxeToolbarProps)"),s("td",null,"{}"),s("td",null,"一般不用管")]),s("tr",null,[s("td",null,"actionWidth"),s("td",null,"Number as PropType(number)"),s("td",null,"160"),s("td",null,"操作栏的宽度")]),s("tr",null,[s("td",null,"actionProps"),s("td",null,"Object as PropType(VxeTableDefines.ColumnOptions)"),s("td",null,"{}"),s("td",null,"(参考vxetable)")]),s("tr",null,[s("td",null,"rowClassName"),s("td",null,"String as PropType(VxeTablePropTypes.RowClassName)"),s("td",null,"''"),s("td",null,"行的class")]),s("tr",null,[s("td",null,"showAction"),s("td",null,"Boolean as PropType(boolean)"),s("td",null,"true"),s("td",null,"是否展示操作栏(是有一个action的插槽,否则没有)")]),s("tr",null,[s("td",null,"其他"),s("td",null,"VxeGridProps的所以参数会透传进来"),s("td",{true:""}),s("td",null,"VxeGrid的props")])])],-1),r=l("",5),c=[t,e,r];function y(d,D,A,B,i,E){return a(),o("div",null,c)}const b=n(p,[["render",y]]);export{u as __pageData,b as default};
